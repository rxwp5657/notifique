openapi: 3.1.0
info:
  title: Notifique API Spec
  version: 0.1.0
  license:
    name: MIT
    identifier: MIT License
paths:
  /notifications:
    get:
      summary: |
        Gets the user's in-app notifications
      parameters:
        - in: query
          name: take
          description: |
            The number of notifications to take (used for pagination).
          schema:
            type: integer
        - in: query
          name: skip
          description: |
            Skips the top N newest notifications (used for pagination).
          schema:
            type: integer
        - in: query
          name: topics
          description: |
            Selects notifications whose topic is included in the array. To
            specify multiple topics use the "topics=WARNING&topics=ERROR"
            format.
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/components/schemas/Topic'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'
        "500":
          description: |
            Failed to retrieve the user's notifications.
    post:
      summary: Creates a new notification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        "201":
          description: Notification received and persisted.
        "400":
          description: |
            Topic is not a string or doesn't comply with the specified constraints.
        "500":
          description: |
            Failed to persist the notification. If a channel fails to deliver
            a message it won't trigger an error.

  /notifications/config:
    get:
      summary: Get the user's notification configuration
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfig'
        "500":
          description: |
            Failed to retrieve the user's notification configuration.
    patch:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfig'
      responses:
        "200":
          description: OK
        "400":
          description: |
            If the supplied channel is not a valid channel.
            If the snoozed at parameter is on the past.
        "500":
          description: |
            Failed to store the new configuration.
      description: |
        Updates the user's configuration.

  /notifications/{id}:
    patch:
      summary: Updates the notification's read status.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            required: true

components:

  schemas:

    Topic:
      type: string
      minLength: 1
      maxLength: 64

    Channel:
       type: string
       enum:
         - e-mail
         - sms
         - in-app

    Notification:
      type: object
      properties:
        title:
          type: string
          maxLength: 120
        contents:
          type: string
          maxLength: 1024
        image:
          type: string
          format: uri
        topic:
          $ref: '#/components/schemas/Topic'
        recipients:
          type: array
          uniqueItems: true
          description: array of user ids
          items:
            type: string
        channels:
           type: array
           uniqueItems: true
           description: array of delivery channels
           items:
            $ref: '#/components/schemas/Channel'
      required:
        - title
        - contents
        - topic

    UserNotification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        contents:
          type: string
        read_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        topic:
          $ref: '#/components/schemas/Topic'
      required:
        - id
        - title
        - contents
        - topic
        - created_at

    ChannelConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        optIn:
          type: boolean
        snoozeUntil:
          type: string
          format: date-time
      required:
        - channel

    UserConfig:
      type: object
      properties:
        config:
          type: array
          uniqueItems: true
          description: |
            Describes the user's configuration on the notification
            system.
          items:
            $ref: '#/components/schemas/ChannelConfig'
