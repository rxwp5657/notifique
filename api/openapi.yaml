openapi: 3.1.0
info:
  title: Notifique API Spec
  version: 0.1.0
  license:
    name: MIT
    identifier: MIT License
paths:
  /users/me/notifications:
    get:
      summary: |
        Gets the user's in-app notifications
      tags:
        - users
      parameters:
        - in: query
          name: pageSize
          description: |
            The number of notifications to retrieve.
          schema:
            type: integer
        - in: query
          name: page
          description: |
            Page number
          schema:
            type: integer
        - in: query
          name: topics
          description: |
            Selects notifications whose topic is included in the array. To
            specify multiple topics use the "topics=WARNING&topics=ERROR"
            format.
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/components/schemas/Topic'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserNotification'

  /users/me/notifications/{id}:
    patch:
      summary: Updates the notification's read status.
      tags:
        - users
      parameters:
        - in: path
          name: id
          description: notification id.
          schema:
            type: string
            format: uuid
            required: true
      responses:
        "404":
          description: |
            If the notification doesn't exists.
        "200":
          description: Ok

  /notifications:
    post:
      summary: Creates a new notification.
      tags:
        - notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        "201":
          description: Notification received and persisted.
        "400":
          description: |
            Topic is not a string or doesn't comply with the specified constraints.
            Distribution list doesn' exists.

  /users/me/notifications/config:
    get:
      summary: Get the user's notification configuration
      tags:
        - notifications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConfig'
    patch:
      summary: Update the user's notification configuration.
      tags:
        - notifications
      description: |
        Updates the user's notification configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfig'
      responses:
        "200":
          description: OK
        "400":
          description: |
            If the supplied channel is not a valid channel.
            If the snoozed at parameter is on the past.

  /distribution-lists:
    post:
      summary: |
        Creates a new distribution list.
      tags:
        - distribution list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributionList'
      responses:
        "400":
          description: |
            The distribution list already exists.
        "201":
          description: |
            The distribution list was created successfully.
    get:
      summary: |
        Gets the available distribution lists with their number of recipients.
      tags:
        - distribution list
      parameters:
        - in: query
          name: pageSize
          description: |
            The number of distributed lists to retrieve.
          schema:
            type: integer
        - in: query
          name: page
          description: |
            Page number
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/DistributionListSummary'

  /distribution-lists/{name}:
    delete:
      summary: Delete distribution list
    tags:
      - distribution lists
    parameters:
      - in: path
        name: name
        schema:
          $ref: '#/components/schemas/DistributionListName'
    responses:
      "204":
        description: No content.

  /distribution-lists/{name}/recipients:
    get:
      summary: |
        Gets the users of the distribution list.
      tags:
        - distribution list
      parameters:
        - in: path
          name: name
          schema:
            $ref: '#/components/schemas/DistributionListName'
        - in: query
          name: pageSize
          description: |
            The number of users to retrieve.
          schema:
            type: integer
        - in: query
          name: page
          description: |
            Page number.
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PageResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserIdList'
        "404":
          description: The distribution list doesn't exists

    patch:
      summary: |
        Adds new users to the distribution list.
      tags:
        - distribution list
      parameters:
        - in: path
          name: name
          schema:
            $ref: '#/components/schemas/DistributionListName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdList'
      responses:
        "204":
          description: Users added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionListSummary'
        "400":
          description: The distribution list doesn't exists

    delete:
      summary: |
        Deletes users from the distribution list.
      tags:
        - distribution list
      parameters:
        - in: path
          name: name
          schema:
            $ref: '#/components/schemas/DistributionListName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdList'
      responses:
        "200":
          description: Users deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionListSummary'
        "400":
          description: The distribution list doesn't exists

components:

  schemas:

    Topic:
      type: string
      minLength: 1
      maxLength: 64

    Channel:
       type: string
       enum:
         - e-mail
         - sms
         - in-app

    Priority:
      type: string
      enum:
        - HIGH
        - MEDIUM
        - LOW

    UserId:
      type: string
      minLenght: 1

    UserIdList:
      type: array
      uniqueItems: true
      description: array of user ids
      maxItems: 256
      items:
        $ref: '#/components/schemas/UserId'

    Notification:
      type: object
      properties:
        title:
          type: string
          maxLength: 120
        contents:
          type: string
          maxLength: 1024
        image:
          type: string
          format: uri
        topic:
          $ref: '#/components/schemas/Topic'
        recipients:
          $ref: '#/components/schemas/UserIdList'
        distributionList:
          $ref: '#/components/schemas/DistributionListName'
        channels:
           type: array
           uniqueItems: true
           description: array of delivery channels
           items:
            $ref: '#/components/schemas/Channel'
        priority:
          $ref: '#/components/schemas/Priority'
      required:
        - title
        - contents
        - topic
        - priority

    UserNotification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        contents:
          type: string
        image:
          type: string
          format: uri
        read_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        topic:
          $ref: '#/components/schemas/Topic'
      required:
        - id
        - title
        - contents
        - topic
        - created_at

    UserNotificationReq:
      type: object
      properties:
        title:
          type: string
        contents:
          type: string
        topic:
          $ref: '#/components/schemas/Topic'
        image:
          type: string
          format: uri

    ChannelConfig:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
        optIn:
          type: boolean
        snoozeUntil:
          type: string
          format: date-time
      required:
        - channel

    UserConfig:
      type: object
      properties:
        config:
          type: array
          uniqueItems: true
          description: |
            Describes the user's configuration on the notification
            system.
          items:
            $ref: '#/components/schemas/ChannelConfig'

    DistributionListName:
      type: string
      minLength: 1
      maxLength: 120
      pattern: '[A-Za-z0-9$#@-_]+'

    DistributionList:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DistributionListName'
        recipients:
          $ref: '#/components/schemas/UserIdList'

    DistributionListSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          $ref: '#/components/schemas/DistributionListName'
        numberOfRecipients:
          type: number
    
    PageResponse:
      type: object
      properties:
        nextToken:
          type: string
          nullable: true
          desciption: |
            This is the id of the last evaluated row and is used to know
            where the operation stopped. This item won't be included on
            the next page.
        prevToken:
          type: string
          nullable: true
        resultCount:
          type: int
          nullable: false
